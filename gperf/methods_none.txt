%{
#include <string.h>
#include "object_string.h"
#include "vm.h"
#include "value.h"
#include "value_none.h"

Value PyNone_Equal(int argc, Value *argv) {
    if (argc != 1)
        reportArityError(1, 1, argc);
    Value res = None_Equal(argv[0], argv[1]);
    if (IS_NOT_IMPLEMENTED(res))
        operatorNotImplemented("==", argv[0], argv[1]);
    return res;
}

Value PyNone_NotEqual(int argc, Value *argv) {
    if (argc != 1)
        reportArityError(1, 1, argc);
    Value res = None_NotEqual(argv[0], argv[1]);
    if (IS_NOT_IMPLEMENTED(res))
        operatorNotImplemented("!=", argv[0], argv[1]);
    return res;
}

Value PyNone_GetAttr(int argc, Value *argv) {
    if (argc != 1)
        reportArityError(1, 1, argc);
    Value res = None_GetAttr(argv[0], AS_STRING(argv[1]));
    if (IS_NOT_IMPLEMENTED(res))
        operatorNotImplementedUnary("getattr", argv[0]);
    return res;
}

%}

struct GperfMethod

%readonly-tables
%struct-type
%define lookup-function-name in_none_set

%%
__eq__, PyNone_Equal
__ne__, PyNone_NotEqual
__getattr__, PyNone_GetAttr
%%
